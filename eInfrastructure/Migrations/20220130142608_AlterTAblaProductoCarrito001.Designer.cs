// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eInfrastructure.Contexts;

namespace eInfrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220130142608_AlterTAblaProductoCarrito001")]
    partial class AlterTAblaProductoCarrito001
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("eInfrastructure.Entities.CategoriaProducto", b =>
                {
                    b.Property<int>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("DescripcionCategoria")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdUsuarioRegistro")
                        .HasColumnType("int");

                    b.HasKey("IdCategoria");

                    b.HasIndex("IdUsuarioRegistro");

                    b.ToTable("CategoriaProducto");
                });

            modelBuilder.Entity("eInfrastructure.Entities.Estado", b =>
                {
                    b.Property<int>("IdEstado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("DescripcionEstado")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("IdEstado");

                    b.ToTable("Estados");

                    b.HasData(
                        new
                        {
                            IdEstado = 1,
                            DescripcionEstado = "USUARIO ACTIVO"
                        },
                        new
                        {
                            IdEstado = 2,
                            DescripcionEstado = "USUARIO BLOQUEADO"
                        },
                        new
                        {
                            IdEstado = 99,
                            DescripcionEstado = "USUARIO BORRADO"
                        });
                });

            modelBuilder.Entity("eInfrastructure.Entities.EstadoProducto", b =>
                {
                    b.Property<int>("IdEstadoProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("DescripcionProducto")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("IdEstadoProducto");

                    b.ToTable("EstadosProductos");

                    b.HasData(
                        new
                        {
                            IdEstadoProducto = 1,
                            DescripcionProducto = "ACTIVO"
                        },
                        new
                        {
                            IdEstadoProducto = 2,
                            DescripcionProducto = "INACTIVO"
                        },
                        new
                        {
                            IdEstadoProducto = 99,
                            DescripcionProducto = "BORRADO"
                        });
                });

            modelBuilder.Entity("eInfrastructure.Entities.Producto", b =>
                {
                    b.Property<int>("IdProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("DescripcionProducto")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdCategoria")
                        .HasColumnType("int");

                    b.Property<int>("IdEstadoProducto")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuarioRegistro")
                        .HasColumnType("int");

                    b.Property<string>("ImagenProducto")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("NombreProducto")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<double>("Precio")
                        .HasColumnType("double");

                    b.HasKey("IdProducto");

                    b.HasIndex("IdCategoria");

                    b.HasIndex("IdEstadoProducto");

                    b.HasIndex("IdUsuarioRegistro");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("eInfrastructure.Entities.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdEstado")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuarioRegistro")
                        .HasColumnType("int");

                    b.Property<string>("IdiomaElegido")
                        .IsRequired()
                        .HasColumnType("varchar(3) CHARACTER SET utf8mb4")
                        .HasMaxLength(3);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("esAdministrador")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("IdUsuario");

                    b.HasIndex("IdEstado");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            IdUsuario = 1,
                            Cedula = "ADM001",
                            Contraseña = "$2a$11$9P8Aqqh6r3ZZGs.0dbY8l.yZSjSejXwfezK.BgnGAoYW6sOjoBhQi",
                            Correo = "vicram10@gmail.com",
                            FechaRegistro = new DateTime(2022, 1, 30, 11, 26, 7, 790, DateTimeKind.Local).AddTicks(4960),
                            IdEstado = 1,
                            IdUsuarioRegistro = 1,
                            IdiomaElegido = "ES",
                            Nombre = "ADMINISTRADOR GENERAL",
                            esAdministrador = true
                        });
                });

            modelBuilder.Entity("eInfrastructure.Entities.CategoriaProducto", b =>
                {
                    b.HasOne("eInfrastructure.Entities.Usuario", "UsuarioRegistro")
                        .WithMany()
                        .HasForeignKey("IdUsuarioRegistro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("eInfrastructure.Entities.Producto", b =>
                {
                    b.HasOne("eInfrastructure.Entities.CategoriaProducto", "Categoria")
                        .WithMany()
                        .HasForeignKey("IdCategoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eInfrastructure.Entities.EstadoProducto", "EstadoProducto")
                        .WithMany()
                        .HasForeignKey("IdEstadoProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eInfrastructure.Entities.Usuario", "UsuarioRegistro")
                        .WithMany()
                        .HasForeignKey("IdUsuarioRegistro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("eInfrastructure.Entities.Usuario", b =>
                {
                    b.HasOne("eInfrastructure.Entities.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("IdEstado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
